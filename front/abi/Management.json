{
  "contractName": "Management",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bookId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevBookId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "children",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "newBook",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "guide",
          "type": "address"
        }
      ],
      "name": "profit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bookId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prevBookId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "children",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "updatedBook",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bookPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxRootedBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTokenAddress",
          "type": "address"
        }
      ],
      "name": "changeTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBookPrice",
          "type": "uint256"
        }
      ],
      "name": "changeBookPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newMaxRootedBook",
          "type": "uint256"
        }
      ],
      "name": "changeMaxRootedBook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newContractEnabled",
          "type": "bool"
        }
      ],
      "name": "changeContractEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bookId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBookId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"children\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"newBook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guide\",\"type\":\"address\"}],\"name\":\"profit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bookId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevBookId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"children\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"updatedBook\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bookPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBookPrice\",\"type\":\"uint256\"}],\"name\":\"changeBookPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newContractEnabled\",\"type\":\"bool\"}],\"name\":\"changeContractEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxRootedBook\",\"type\":\"uint256\"}],\"name\":\"changeMaxRootedBook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTokenAddress\",\"type\":\"address\"}],\"name\":\"changeTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRootedBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeBookPrice(uint256)\":{\"details\":\"only used if digits of the token change\",\"params\":{\"_newBookPrice\":\"new price of the book\"}},\"changeContractEnabled(bool)\":{\"params\":{\"_newContractEnabled\":\"new enabling value\"}},\"changeMaxRootedBook(uint256)\":{\"params\":{\"_newMaxRootedBook\":\"new limit\"}},\"changeTokenAddress(address)\":{\"params\":{\"_newTokenAddress\":\"new token address\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"address of the new owner of the contract\"}}},\"stateVariables\":{\"contractEnabled\":{\"details\":\"only used to disable old contract after a migration\"}},\"title\":\"Contract with all functions need to manage contract\",\"version\":1},\"userdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"notice\":\"Event emited when ownership is transferred\"},\"newBook(uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Event emitted during a book creation\"},\"profit(uint256,address)\":{\"notice\":\"Event emitted when profit is added to user's wallet\"},\"updatedBook(uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Event emitted when a book is updated (update of child/profit)\"}},\"kind\":\"user\",\"methods\":{\"bookPrice()\":{\"notice\":\"Price of a book\"},\"changeBookPrice(uint256)\":{\"notice\":\"Change the book price\"},\"changeContractEnabled(bool)\":{\"notice\":\"Change contract enabling\"},\"changeMaxRootedBook(uint256)\":{\"notice\":\"Change the limit of rooted books\"},\"changeTokenAddress(address)\":{\"notice\":\"Change the address of the token contract\"},\"contractEnabled()\":{\"notice\":\"Bool to block or not contract\"},\"maxRootedBook()\":{\"notice\":\"Maximum number of rooted books (see whitepaper)\"},\"owner()\":{\"notice\":\"address of the owner of the contract\"},\"token()\":{\"notice\":\"Token variable to call his methods\"},\"tokenAddress()\":{\"notice\":\"Address of the token used to buy books (see whitepaper)\"},\"transferOwnership(address)\":{\"notice\":\"Allows the current owner to transfer ownership of the contract to a new owner\"},\"withdraw(uint256)\":{\"notice\":\"Transfer funds from contract address to owner wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Management.sol\":\"Management\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x53a0bb51b8a505e04aaf065de27c0e31cadf38194f8a9a6ec92b7bcd3c5826e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d7019db0d8c1256995eb44b2aabf1189120c0bd01efa653e0eabdbc8cf4742\",\"dweb:/ipfs/QmZRiFEksts7Z2r1xnHb9Jqu4udHyTM6tQVTCyFosMXQAy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cc9f9a6d9c1e2ca9cd191840c0e6017d22bf99d88b368137e43c67f63d17d1c\",\"dweb:/ipfs/Qmd3vUSxY4fRi4AUFMkerjrMFEKRLGVJUGFmxazR1wnPXP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"project:/contracts/Event.sol\":{\"keccak256\":\"0x88b4703e09d7dfafe0daa8933eabfbac59f5d02b60f3d15b5bc9ee377396d343\",\"license\":\"Apache License 2.0\",\"urls\":[\"bzz-raw://3f5a72c981fc98b6f8b54555ae5b717ff9f28e1ddbe4e6b223ec8a3dac5a5170\",\"dweb:/ipfs/QmQW74SqbLDyvu7XupGHbdCHqsAiDQnchU3nnko3b1R6UE\"]},\"project:/contracts/Management.sol\":{\"keccak256\":\"0xe5f0f00b87f220dd451c31dedb31daad879cececee721290cf6d62498699a618\",\"license\":\"Apache License 2.0\",\"urls\":[\"bzz-raw://2221995347b1ef2779129e6ec934ae8fa5863f129655606b0589060880ecb095\",\"dweb:/ipfs/QmTLAVJ2pzxwcGUGJZXapRJseN4VaYty66q5azKL1ueKKL\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0xa5bec841daab9f1b0fe909bbb061db48efa4f9c9e1f474d88ca2488f947e68ae\",\"license\":\"Apache License 2.0\",\"urls\":[\"bzz-raw://0bcdc147cf376c2917bbbdc694734a60fed893467a44ad5955f2457b3d3d3bb0\",\"dweb:/ipfs/QmQPJ8ozCZLpTQQu7aCiKpB8XnWeuFTNdfsg2fXVeCqoS1\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600060146101000a81548160ff02191690831515021790555068056bc75e2d63100000600155603260025534801561003d57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e328061008d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101675780639d76ea5814610185578063c9cda91f146101a3578063dece9c7d146101bf578063f2fde38b146101db578063fc0c546a146101f7576100b4565b806317d832b7146100b95780632e1a7d4d146100d557806340e548c8146100f157806341b3a0d91461010f5780636e9164f41461012d5780638bbb4b4d1461014b575b600080fd5b6100d360048036038101906100ce919061096f565b610215565b005b6100ef60048036038101906100ea919061096f565b6102f2565b005b6100f9610424565b60405161010691906109ab565b60405180910390f35b61011761042a565b60405161012491906109e1565b60405180910390f35b61013561043d565b60405161014291906109ab565b60405180910390f35b61016560048036038101906101609190610a28565b610443565b005b61016f6104ee565b60405161017c9190610a96565b60405180910390f35b61018d610512565b60405161019a9190610a96565b60405180910390f35b6101bd60048036038101906101b89190610add565b610538565b005b6101d960048036038101906101d4919061096f565b6106bb565b005b6101f560048036038101906101f09190610add565b610753565b005b6101ff61090e565b60405161020c9190610b69565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610be1565b60405180910390fd5b6000600154116102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610c4d565b60405180910390fd5b8060018190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610be1565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103dd929190610c6d565b6020604051808303816000875af11580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190610cab565b5050565b60025481565b600060149054906101000a900460ff1681565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890610be1565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610be1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90610d4a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090610be1565b60405180910390fd5b8060028190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890610be1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890610ddc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61094c81610939565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b60006020828403121561098557610984610934565b5b60006109938482850161095a565b91505092915050565b6109a581610939565b82525050565b60006020820190506109c0600083018461099c565b92915050565b60008115159050919050565b6109db816109c6565b82525050565b60006020820190506109f660008301846109d2565b92915050565b610a05816109c6565b8114610a1057600080fd5b50565b600081359050610a22816109fc565b92915050565b600060208284031215610a3e57610a3d610934565b5b6000610a4c84828501610a13565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8082610a55565b9050919050565b610a9081610a75565b82525050565b6000602082019050610aab6000830184610a87565b92915050565b610aba81610a75565b8114610ac557600080fd5b50565b600081359050610ad781610ab1565b92915050565b600060208284031215610af357610af2610934565b5b6000610b0184828501610ac8565b91505092915050565b6000819050919050565b6000610b2f610b2a610b2584610a55565b610b0a565b610a55565b9050919050565b6000610b4182610b14565b9050919050565b6000610b5382610b36565b9050919050565b610b6381610b48565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b600082825260208201905092915050565b7f4d6573736167652073656e646572206973206e6f7420746865206f776e65722e600082015250565b6000610bcb602083610b84565b9150610bd682610b95565b602082019050919050565b60006020820190508181036000830152610bfa81610bbe565b9050919050565b7f4e657720626f6f6b20707269636520697320696e76616c696420283c3d203029600082015250565b6000610c37602083610b84565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b6000604082019050610c826000830185610a87565b610c8f602083018461099c565b9392505050565b600081519050610ca5816109fc565b92915050565b600060208284031215610cc157610cc0610934565b5b6000610ccf84828501610c96565b91505092915050565b7f4e657720746f6b656e2773206164647265737320697320696e76616c6964202860008201527f3d20302900000000000000000000000000000000000000000000000000000000602082015250565b6000610d34602483610b84565b9150610d3f82610cd8565b604082019050919050565b60006020820190508181036000830152610d6381610d27565b9050919050565b7f4e6577206f776e65722773206164647265737320697320696e76616c6964202860008201527f3d20302900000000000000000000000000000000000000000000000000000000602082015250565b6000610dc6602483610b84565b9150610dd182610d6a565b604082019050919050565b60006020820190508181036000830152610df581610db9565b905091905056fea264697066735822122042ec473067bd4513a3626c53baac3f36a5a6b0bc11aaadc29baf0b85c4e0159664736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101675780639d76ea5814610185578063c9cda91f146101a3578063dece9c7d146101bf578063f2fde38b146101db578063fc0c546a146101f7576100b4565b806317d832b7146100b95780632e1a7d4d146100d557806340e548c8146100f157806341b3a0d91461010f5780636e9164f41461012d5780638bbb4b4d1461014b575b600080fd5b6100d360048036038101906100ce919061096f565b610215565b005b6100ef60048036038101906100ea919061096f565b6102f2565b005b6100f9610424565b60405161010691906109ab565b60405180910390f35b61011761042a565b60405161012491906109e1565b60405180910390f35b61013561043d565b60405161014291906109ab565b60405180910390f35b61016560048036038101906101609190610a28565b610443565b005b61016f6104ee565b60405161017c9190610a96565b60405180910390f35b61018d610512565b60405161019a9190610a96565b60405180910390f35b6101bd60048036038101906101b89190610add565b610538565b005b6101d960048036038101906101d4919061096f565b6106bb565b005b6101f560048036038101906101f09190610add565b610753565b005b6101ff61090e565b60405161020c9190610b69565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610be1565b60405180910390fd5b6000600154116102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610c4d565b60405180910390fd5b8060018190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610be1565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103dd929190610c6d565b6020604051808303816000875af11580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104209190610cab565b5050565b60025481565b600060149054906101000a900460ff1681565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890610be1565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610be1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d90610d4a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090610be1565b60405180910390fd5b8060028190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d890610be1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890610ddc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61094c81610939565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b60006020828403121561098557610984610934565b5b60006109938482850161095a565b91505092915050565b6109a581610939565b82525050565b60006020820190506109c0600083018461099c565b92915050565b60008115159050919050565b6109db816109c6565b82525050565b60006020820190506109f660008301846109d2565b92915050565b610a05816109c6565b8114610a1057600080fd5b50565b600081359050610a22816109fc565b92915050565b600060208284031215610a3e57610a3d610934565b5b6000610a4c84828501610a13565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8082610a55565b9050919050565b610a9081610a75565b82525050565b6000602082019050610aab6000830184610a87565b92915050565b610aba81610a75565b8114610ac557600080fd5b50565b600081359050610ad781610ab1565b92915050565b600060208284031215610af357610af2610934565b5b6000610b0184828501610ac8565b91505092915050565b6000819050919050565b6000610b2f610b2a610b2584610a55565b610b0a565b610a55565b9050919050565b6000610b4182610b14565b9050919050565b6000610b5382610b36565b9050919050565b610b6381610b48565b82525050565b6000602082019050610b7e6000830184610b5a565b92915050565b600082825260208201905092915050565b7f4d6573736167652073656e646572206973206e6f7420746865206f776e65722e600082015250565b6000610bcb602083610b84565b9150610bd682610b95565b602082019050919050565b60006020820190508181036000830152610bfa81610bbe565b9050919050565b7f4e657720626f6f6b20707269636520697320696e76616c696420283c3d203029600082015250565b6000610c37602083610b84565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b6000604082019050610c826000830185610a87565b610c8f602083018461099c565b9392505050565b600081519050610ca5816109fc565b92915050565b600060208284031215610cc157610cc0610934565b5b6000610ccf84828501610c96565b91505092915050565b7f4e657720746f6b656e2773206164647265737320697320696e76616c6964202860008201527f3d20302900000000000000000000000000000000000000000000000000000000602082015250565b6000610d34602483610b84565b9150610d3f82610cd8565b604082019050919050565b60006020820190508181036000830152610d6381610d27565b9050919050565b7f4e6577206f776e65722773206164647265737320697320696e76616c6964202860008201527f3d20302900000000000000000000000000000000000000000000000000000000602082015250565b6000610dc6602483610b84565b9150610dd182610d6a565b604082019050919050565b60006020820190508181036000830152610df581610db9565b905091905056fea264697066735822122042ec473067bd4513a3626c53baac3f36a5a6b0bc11aaadc29baf0b85c4e0159664736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9522:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:11",
                "type": ""
              }
            ],
            "src": "334:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:11",
                "type": ""
              }
            ],
            "src": "417:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:11",
                "type": ""
              }
            ],
            "src": "545:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:11",
                "type": ""
              }
            ],
            "src": "690:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:11",
                "type": ""
              }
            ],
            "src": "1025:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:11",
                "type": ""
              }
            ],
            "src": "1149:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1419:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1429:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1454:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1447:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1447:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1440:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1429:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1401:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1411:7:11",
                "type": ""
              }
            ],
            "src": "1377:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1532:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1549:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1569:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1554:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1520:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1527:3:11",
                "type": ""
              }
            ],
            "src": "1473:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1680:118:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1690:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1702:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1713:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1698:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1690:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1764:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1726:37:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1726:65:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1652:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1664:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1675:4:11",
                "type": ""
              }
            ],
            "src": "1588:210:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1844:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1898:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1907:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1910:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1900:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1900:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1900:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1867:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1889:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "1874:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1874:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1864:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1857:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1857:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1854:60:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1837:5:11",
                "type": ""
              }
            ],
            "src": "1804:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1975:84:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1985:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2007:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1994:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1985:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2047:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2023:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2023:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1953:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1961:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1969:5:11",
                "type": ""
              }
            ],
            "src": "1926:133:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2128:260:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2174:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2176:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2176:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2176:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2149:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2158:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2170:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2141:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2141:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2138:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2267:114:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2282:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2296:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2286:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2311:60:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2343:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2354:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2339:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2339:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2363:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2321:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2321:50:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2311:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2098:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2109:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2121:6:11",
                "type": ""
              }
            ],
            "src": "2065:323:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2439:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2449:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2464:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2471:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2449:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2421:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2431:7:11",
                "type": ""
              }
            ],
            "src": "2394:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2571:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2581:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2610:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2592:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2581:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2553:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2563:7:11",
                "type": ""
              }
            ],
            "src": "2526:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2693:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2710:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2733:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2715:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2715:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2703:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2703:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2681:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2688:3:11",
                "type": ""
              }
            ],
            "src": "2628:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2850:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2860:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2872:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2883:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2868:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2860:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2940:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2953:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2964:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2949:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2949:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2896:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2896:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2822:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2834:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2845:4:11",
                "type": ""
              }
            ],
            "src": "2752:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3023:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3080:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3089:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3092:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3082:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3082:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3082:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3046:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3071:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3053:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3053:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3043:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3043:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3036:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3036:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3033:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3016:5:11",
                "type": ""
              }
            ],
            "src": "2980:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3170:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3192:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3179:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3179:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3170:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3235:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3208:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3208:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3208:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3138:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3146:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3154:5:11",
                "type": ""
              }
            ],
            "src": "3108:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3319:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3365:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3367:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3367:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3367:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3340:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3349:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3336:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3336:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3361:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3332:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3332:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3329:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3458:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3473:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3487:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3477:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3502:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3537:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3548:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3533:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3533:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3557:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3512:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3512:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3502:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3289:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3300:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3312:6:11",
                "type": ""
              }
            ],
            "src": "3253:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3620:28:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3630:12:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3637:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3630:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3606:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3616:3:11",
                "type": ""
              }
            ],
            "src": "3588:60:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3714:82:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3724:66:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3782:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3764:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3764:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3755:8:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3755:34:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3737:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:53:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3724:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3694:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3704:9:11",
                "type": ""
              }
            ],
            "src": "3654:142:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3862:66:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3872:50:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3916:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3885:30:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3885:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3872:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3842:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3852:9:11",
                "type": ""
              }
            ],
            "src": "3802:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4007:66:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4017:50:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4061:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4030:30:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4017:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$545_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3987:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3997:9:11",
                "type": ""
              }
            ],
            "src": "3934:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4157:79:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4174:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4223:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$545_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4179:43:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4179:50:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4167:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4167:63:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$545_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4145:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4152:3:11",
                "type": ""
              }
            ],
            "src": "4079:157:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4353:137:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4363:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4375:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4371:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4371:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4363:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4456:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4469:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4480:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4465:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4465:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$545_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4399:56:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4399:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4399:84:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$545__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4325:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4337:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4348:4:11",
                "type": ""
              }
            ],
            "src": "4242:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4592:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4609:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4614:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4602:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4602:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4602:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4630:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4649:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4654:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4645:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4645:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4630:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4564:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4569:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4580:11:11",
                "type": ""
              }
            ],
            "src": "4496:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4777:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4799:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4807:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4795:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4795:14:11"
                      },
                      {
                        "hexValue": "4d6573736167652073656e646572206973206e6f7420746865206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4811:34:11",
                        "type": "",
                        "value": "Message sender is not the owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4788:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4788:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4769:6:11",
                "type": ""
              }
            ],
            "src": "4671:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5005:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5015:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5081:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5086:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5022:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5022:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5015:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5187:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a",
                      "nodeType": "YulIdentifier",
                      "src": "5098:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5098:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5098:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5200:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5211:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5216:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5207:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5207:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5200:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4993:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5001:3:11",
                "type": ""
              }
            ],
            "src": "4859:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5402:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5412:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5424:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5435:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5420:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5420:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5412:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5459:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5470:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5455:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5478:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5484:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5474:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5474:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5448:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5448:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5448:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5504:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5638:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5512:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5512:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5504:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5382:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5397:4:11",
                "type": ""
              }
            ],
            "src": "5231:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5762:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5784:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5792:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5780:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:14:11"
                      },
                      {
                        "hexValue": "4e657720626f6f6b20707269636520697320696e76616c696420283c3d203029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5796:34:11",
                        "type": "",
                        "value": "New book price is invalid (<= 0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5773:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5754:6:11",
                "type": ""
              }
            ],
            "src": "5656:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5990:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6000:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6066:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6071:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6007:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6007:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6000:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6172:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
                      "nodeType": "YulIdentifier",
                      "src": "6083:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6083:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6083:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6185:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6196:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6201:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6185:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5978:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5986:3:11",
                "type": ""
              }
            ],
            "src": "5844:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6387:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6397:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6409:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6420:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6405:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6405:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6397:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6444:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6455:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6463:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6469:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6459:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6459:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6433:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6433:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6489:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6623:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6497:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6497:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6489:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6367:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6382:4:11",
                "type": ""
              }
            ],
            "src": "6216:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6767:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6777:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6789:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6800:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6785:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6785:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6777:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6857:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6870:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6881:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6866:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6866:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6813:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6813:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6938:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6951:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6962:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6947:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6947:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6894:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6894:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6894:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6731:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6743:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6751:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6762:4:11",
                "type": ""
              }
            ],
            "src": "6641:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7039:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7049:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7064:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7058:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7058:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7049:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7104:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7080:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7080:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7017:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7025:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7033:5:11",
                "type": ""
              }
            ],
            "src": "6979:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7196:271:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7242:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7244:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7244:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7244:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7217:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7226:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7213:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7213:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7238:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7209:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7209:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "7206:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7335:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7350:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7364:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7354:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7379:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7422:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7433:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7418:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7418:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7442:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7389:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7389:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7379:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7166:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7177:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7189:6:11",
                "type": ""
              }
            ],
            "src": "7122:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7579:117:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7601:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7609:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7597:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7597:14:11"
                      },
                      {
                        "hexValue": "4e657720746f6b656e2773206164647265737320697320696e76616c69642028",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7613:34:11",
                        "type": "",
                        "value": "New token's address is invalid ("
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7590:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7590:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7590:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7669:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7677:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7665:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7665:15:11"
                      },
                      {
                        "hexValue": "3d203029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7682:6:11",
                        "type": "",
                        "value": "= 0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7658:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7658:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7658:31:11"
                }
              ]
            },
            "name": "store_literal_in_memory_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7571:6:11",
                "type": ""
              }
            ],
            "src": "7473:223:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7848:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7858:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7924:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7929:2:11",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7865:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7865:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7858:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8030:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
                      "nodeType": "YulIdentifier",
                      "src": "7941:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7941:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7941:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8043:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8054:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8059:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8050:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8050:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8043:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7836:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7844:3:11",
                "type": ""
              }
            ],
            "src": "7702:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8245:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8255:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8267:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8278:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8263:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8263:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8255:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8302:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8313:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8298:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8298:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8321:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8327:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8317:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8317:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8291:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8291:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8291:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8347:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8481:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8355:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8355:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8347:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8225:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8240:4:11",
                "type": ""
              }
            ],
            "src": "8074:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8605:117:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8627:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8635:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8623:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8623:14:11"
                      },
                      {
                        "hexValue": "4e6577206f776e65722773206164647265737320697320696e76616c69642028",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8639:34:11",
                        "type": "",
                        "value": "New owner's address is invalid ("
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8616:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8616:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8695:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8703:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8691:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8691:15:11"
                      },
                      {
                        "hexValue": "3d203029",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8708:6:11",
                        "type": "",
                        "value": "= 0)"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8684:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8684:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8684:31:11"
                }
              ]
            },
            "name": "store_literal_in_memory_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8597:6:11",
                "type": ""
              }
            ],
            "src": "8499:223:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8874:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8884:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8950:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8955:2:11",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8891:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8891:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8884:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9056:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2",
                      "nodeType": "YulIdentifier",
                      "src": "8967:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8967:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8967:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9069:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9080:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9085:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9076:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9076:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9069:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8862:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8870:3:11",
                "type": ""
              }
            ],
            "src": "8728:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9271:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9281:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9293:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9304:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9289:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9289:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9281:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9328:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9339:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9324:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9324:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9347:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9353:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9343:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9343:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9317:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9317:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9317:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9373:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9507:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9381:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9381:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9373:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9251:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9266:4:11",
                "type": ""
              }
            ],
            "src": "9100:419:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$545_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$545_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$545_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$545__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$545_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message sender is not the owner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd318b6732ff05db336cc130aea3604d34519719a5e786893833772b9311fa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696(memPtr) {\n\n        mstore(add(memPtr, 0), \"New book price is invalid (<= 0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"New token's address is invalid (\")\n\n        mstore(add(memPtr, 32), \"= 0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"New owner's address is invalid (\")\n\n        mstore(add(memPtr, 32), \"= 0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15f3c53b0eca6ca8894e2809cc9efe01229d45e49b8a1c9a98327d6ce1bf51d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "836:2254:6:-:0;;;1024:4;994:34;;;;;;;;;;;;;;;;;;;;1097:6;1070:33;;1208:2;1177:33;;836:2254;;;;;;;;;;1213:10:8;1205:5;;:18;;;;;;;;;;;;;;;;;;836:2254:6;;;;;;",
  "deployedSourceMap": "836:2254:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2979:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1177:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;994:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1070:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2475:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;800:20:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1292:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1516:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2243:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1601:232:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1380:18:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1961:180;1370:5:8;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2059:1:6::1;2047:9;;:13;2039:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2120:13;2108:9;:25;;;;1961:180:::0;:::o;2979:108::-;1370:5:8;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3044:5:6::1;;;;;;;;;;;:14;;;3059:10;3071:7;3044:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2979:108:::0;:::o;1177:33::-;;;;:::o;994:34::-;;;;;;;;;;;;;:::o;1070:33::-;;;;:::o;2475:155::-;1370:5:8;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2603:19:6::1;2585:15;;:37;;;;;;;;;;;;;;;;;;2475:155:::0;:::o;800:20:8:-;;;;;;;;;;;;:::o;1292:27:6:-;;;;;;;;;;;;;:::o;1516:292::-;1370:5:8;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1650:1:6::1;1622:30;;:16;:30;;;;1600:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1742:16;1727:12;;:31;;;;;;;;;;;;;;;;;;1783:16;1769:5;;:31;;;;;;;;;;;;;;;;;;1516:292:::0;:::o;2243:127::-;1370:5:8;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2345:17:6::1;2329:13;:33;;;;2243:127:::0;:::o;1601:232:8:-;1370:5;;;;;;;;;;1356:19;;:10;:19;;;1348:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1702:1:::1;1682:22;;:8;:22;;;;1674:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1789:8;1761:37;;1782:5;::::0;::::1;;;;;;;;1761:37;;;;;;;;;;;;1817:8;1809:5;::::0;:16:::1;;;;;;;;;;;;;;;;;;1601:232:::0;:::o;1380:18:6:-;;;;;;;;;;;;;:::o;88:117:11:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:90::-;1411:7;1454:5;1447:13;1440:21;1429:32;;1377:90;;;:::o;1473:109::-;1554:21;1569:5;1554:21;:::i;:::-;1549:3;1542:34;1473:109;;:::o;1588:210::-;1675:4;1713:2;1702:9;1698:18;1690:26;;1726:65;1788:1;1777:9;1773:17;1764:6;1726:65;:::i;:::-;1588:210;;;;:::o;1804:116::-;1874:21;1889:5;1874:21;:::i;:::-;1867:5;1864:32;1854:60;;1910:1;1907;1900:12;1854:60;1804:116;:::o;1926:133::-;1969:5;2007:6;1994:20;1985:29;;2023:30;2047:5;2023:30;:::i;:::-;1926:133;;;;:::o;2065:323::-;2121:6;2170:2;2158:9;2149:7;2145:23;2141:32;2138:119;;;2176:79;;:::i;:::-;2138:119;2296:1;2321:50;2363:7;2354:6;2343:9;2339:22;2321:50;:::i;:::-;2311:60;;2267:114;2065:323;;;;:::o;2394:126::-;2431:7;2471:42;2464:5;2460:54;2449:65;;2394:126;;;:::o;2526:96::-;2563:7;2592:24;2610:5;2592:24;:::i;:::-;2581:35;;2526:96;;;:::o;2628:118::-;2715:24;2733:5;2715:24;:::i;:::-;2710:3;2703:37;2628:118;;:::o;2752:222::-;2845:4;2883:2;2872:9;2868:18;2860:26;;2896:71;2964:1;2953:9;2949:17;2940:6;2896:71;:::i;:::-;2752:222;;;;:::o;2980:122::-;3053:24;3071:5;3053:24;:::i;:::-;3046:5;3043:35;3033:63;;3092:1;3089;3082:12;3033:63;2980:122;:::o;3108:139::-;3154:5;3192:6;3179:20;3170:29;;3208:33;3235:5;3208:33;:::i;:::-;3108:139;;;;:::o;3253:329::-;3312:6;3361:2;3349:9;3340:7;3336:23;3332:32;3329:119;;;3367:79;;:::i;:::-;3329:119;3487:1;3512:53;3557:7;3548:6;3537:9;3533:22;3512:53;:::i;:::-;3502:63;;3458:117;3253:329;;;;:::o;3588:60::-;3616:3;3637:5;3630:12;;3588:60;;;:::o;3654:142::-;3704:9;3737:53;3755:34;3764:24;3782:5;3764:24;:::i;:::-;3755:34;:::i;:::-;3737:53;:::i;:::-;3724:66;;3654:142;;;:::o;3802:126::-;3852:9;3885:37;3916:5;3885:37;:::i;:::-;3872:50;;3802:126;;;:::o;3934:139::-;3997:9;4030:37;4061:5;4030:37;:::i;:::-;4017:50;;3934:139;;;:::o;4079:157::-;4179:50;4223:5;4179:50;:::i;:::-;4174:3;4167:63;4079:157;;:::o;4242:248::-;4348:4;4386:2;4375:9;4371:18;4363:26;;4399:84;4480:1;4469:9;4465:17;4456:6;4399:84;:::i;:::-;4242:248;;;;:::o;4496:169::-;4580:11;4614:6;4609:3;4602:19;4654:4;4649:3;4645:14;4630:29;;4496:169;;;;:::o;4671:182::-;4811:34;4807:1;4799:6;4795:14;4788:58;4671:182;:::o;4859:366::-;5001:3;5022:67;5086:2;5081:3;5022:67;:::i;:::-;5015:74;;5098:93;5187:3;5098:93;:::i;:::-;5216:2;5211:3;5207:12;5200:19;;4859:366;;;:::o;5231:419::-;5397:4;5435:2;5424:9;5420:18;5412:26;;5484:9;5478:4;5474:20;5470:1;5459:9;5455:17;5448:47;5512:131;5638:4;5512:131;:::i;:::-;5504:139;;5231:419;;;:::o;5656:182::-;5796:34;5792:1;5784:6;5780:14;5773:58;5656:182;:::o;5844:366::-;5986:3;6007:67;6071:2;6066:3;6007:67;:::i;:::-;6000:74;;6083:93;6172:3;6083:93;:::i;:::-;6201:2;6196:3;6192:12;6185:19;;5844:366;;;:::o;6216:419::-;6382:4;6420:2;6409:9;6405:18;6397:26;;6469:9;6463:4;6459:20;6455:1;6444:9;6440:17;6433:47;6497:131;6623:4;6497:131;:::i;:::-;6489:139;;6216:419;;;:::o;6641:332::-;6762:4;6800:2;6789:9;6785:18;6777:26;;6813:71;6881:1;6870:9;6866:17;6857:6;6813:71;:::i;:::-;6894:72;6962:2;6951:9;6947:18;6938:6;6894:72;:::i;:::-;6641:332;;;;;:::o;6979:137::-;7033:5;7064:6;7058:13;7049:22;;7080:30;7104:5;7080:30;:::i;:::-;6979:137;;;;:::o;7122:345::-;7189:6;7238:2;7226:9;7217:7;7213:23;7209:32;7206:119;;;7244:79;;:::i;:::-;7206:119;7364:1;7389:61;7442:7;7433:6;7422:9;7418:22;7389:61;:::i;:::-;7379:71;;7335:125;7122:345;;;;:::o;7473:223::-;7613:34;7609:1;7601:6;7597:14;7590:58;7682:6;7677:2;7669:6;7665:15;7658:31;7473:223;:::o;7702:366::-;7844:3;7865:67;7929:2;7924:3;7865:67;:::i;:::-;7858:74;;7941:93;8030:3;7941:93;:::i;:::-;8059:2;8054:3;8050:12;8043:19;;7702:366;;;:::o;8074:419::-;8240:4;8278:2;8267:9;8263:18;8255:26;;8327:9;8321:4;8317:20;8313:1;8302:9;8298:17;8291:47;8355:131;8481:4;8355:131;:::i;:::-;8347:139;;8074:419;;;:::o;8499:223::-;8639:34;8635:1;8627:6;8623:14;8616:58;8708:6;8703:2;8695:6;8691:15;8684:31;8499:223;:::o;8728:366::-;8870:3;8891:67;8955:2;8950:3;8891:67;:::i;:::-;8884:74;;8967:93;9056:3;8967:93;:::i;:::-;9085:2;9080:3;9076:12;9069:19;;8728:366;;;:::o;9100:419::-;9266:4;9304:2;9293:9;9289:18;9281:26;;9353:9;9347:4;9343:20;9339:1;9328:9;9324:17;9317:47;9381:131;9507:4;9381:131;:::i;:::-;9373:139;;9100:419;;;:::o",
  "source": "// SPDX-License-Identifier: Apache License 2.0\r\n// Copyright 2021 Ra\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\npragma solidity 0.8.10;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./Event.sol\";\r\n\r\n/// @title Contract with all functions need to manage contract\r\ncontract Management is Ownable, Event {\r\n    /// @notice Bool to block or not contract\r\n    /// @dev only used to disable old contract after a migration\r\n    bool public contractEnabled = true;\r\n\r\n    /// @notice Price of a book\r\n    uint256 public bookPrice = 10**20;\r\n\r\n    /// @notice Maximum number of rooted books (see whitepaper)\r\n    uint256 public maxRootedBook = 50;\r\n\r\n    /// @notice Address of the token used to buy books (see whitepaper)\r\n    address public tokenAddress;\r\n\r\n    /// @notice Token variable to call his methods\r\n    ERC20 public token;\r\n\r\n    /// @notice Change the address of the token contract\r\n    /// @param _newTokenAddress new token address\r\n    function changeTokenAddress(address _newTokenAddress) external onlyOwner {\r\n        require(\r\n            _newTokenAddress != address(0),\r\n            \"New token's address is invalid (= 0)\"\r\n        );\r\n        tokenAddress = _newTokenAddress;\r\n        token = ERC20(_newTokenAddress);\r\n    }\r\n\r\n    /// @notice Change the book price\r\n    /// @param _newBookPrice new price of the book\r\n    /// @dev only used if digits of the token change\r\n    function changeBookPrice(uint256 _newBookPrice) external onlyOwner {\r\n        require(bookPrice > 0, \"New book price is invalid (<= 0)\");\r\n        bookPrice = _newBookPrice;\r\n    }\r\n\r\n    /// @notice Change the limit of rooted books\r\n    /// @param _newMaxRootedBook new limit\r\n    function changeMaxRootedBook(uint256 _newMaxRootedBook) external onlyOwner {\r\n        maxRootedBook = _newMaxRootedBook;\r\n    }\r\n\r\n    /// @notice Change contract enabling\r\n    /// @param _newContractEnabled new enabling value\r\n    function changeContractEnabled(bool _newContractEnabled)\r\n        external\r\n        onlyOwner\r\n    {\r\n        contractEnabled = _newContractEnabled;\r\n    }\r\n\r\n    /// @notice Modifier to disable functions if contract is disabled\r\n    modifier ContractEnabled() {\r\n        require(\r\n            contractEnabled == true,\r\n            \"This contract is not enabled, check if it have been migrated.\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /// @notice Transfer funds from contract address to owner wallet\r\n    function withdraw(uint256 _amount) external onlyOwner {\r\n        token.transfer(msg.sender, _amount);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\wamp64\\www\\P2\\contracts\\Management.sol",
  "ast": {
    "absolutePath": "project:/contracts/Management.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "Event": [
        781
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "Management": [
        917
      ],
      "Ownable": [
        1015
      ]
    },
    "id": 918,
    "license": "Apache License 2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 783,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "638:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 546,
        "src": "665:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 785,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 1016,
        "src": "722:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 786,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 782,
        "src": "747:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 788,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1015,
              "src": "859:7:6"
            },
            "id": 789,
            "nodeType": "InheritanceSpecifier",
            "src": "859:7:6"
          },
          {
            "baseName": {
              "id": 790,
              "name": "Event",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 781,
              "src": "868:5:6"
            },
            "id": 791,
            "nodeType": "InheritanceSpecifier",
            "src": "868:5:6"
          }
        ],
        "canonicalName": "Management",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 787,
          "nodeType": "StructuredDocumentation",
          "src": "772:64:6",
          "text": "@title Contract with all functions need to manage contract"
        },
        "fullyImplemented": true,
        "id": 917,
        "linearizedBaseContracts": [
          917,
          781,
          1015
        ],
        "name": "Management",
        "nameLocation": "845:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 792,
              "nodeType": "StructuredDocumentation",
              "src": "881:107:6",
              "text": "@notice Bool to block or not contract\n @dev only used to disable old contract after a migration"
            },
            "functionSelector": "41b3a0d9",
            "id": 795,
            "mutability": "mutable",
            "name": "contractEnabled",
            "nameLocation": "1006:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "994:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 793,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "994:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1024:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "1037:27:6",
              "text": "@notice Price of a book"
            },
            "functionSelector": "6e9164f4",
            "id": 801,
            "mutability": "mutable",
            "name": "bookPrice",
            "nameLocation": "1085:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1070:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 797,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 798,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1097:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3230",
                "id": 799,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1101:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_20_by_1",
                  "typeString": "int_const 20"
                },
                "value": "20"
              },
              "src": "1097:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 802,
              "nodeType": "StructuredDocumentation",
              "src": "1112:59:6",
              "text": "@notice Maximum number of rooted books (see whitepaper)"
            },
            "functionSelector": "40e548c8",
            "id": 805,
            "mutability": "mutable",
            "name": "maxRootedBook",
            "nameLocation": "1192:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1177:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 803,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 804,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1208:2:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "1219:67:6",
              "text": "@notice Address of the token used to buy books (see whitepaper)"
            },
            "functionSelector": "9d76ea58",
            "id": 808,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "1307:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1292:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 807,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "1328:46:6",
              "text": "@notice Token variable to call his methods"
            },
            "functionSelector": "fc0c546a",
            "id": 812,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1393:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1380:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$545",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 811,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 810,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 545,
                "src": "1380:5:6"
              },
              "referencedDeclaration": 545,
              "src": "1380:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$545",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "1589:219:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 821,
                          "name": "_newTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "1622:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1642:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 822,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1642:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1642:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1622:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e657720746f6b656e2773206164647265737320697320696e76616c696420283d203029",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1667:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
                          "typeString": "literal_string \"New token's address is invalid (= 0)\""
                        },
                        "value": "New token's address is invalid (= 0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
                          "typeString": "literal_string \"New token's address is invalid (= 0)\""
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1600:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:116:6"
                },
                {
                  "expression": {
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 830,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "1727:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 831,
                      "name": "_newTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "1742:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1727:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:31:6"
                },
                {
                  "expression": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 834,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1769:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$545",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 836,
                          "name": "_newTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "1783:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 835,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "1777:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1777:23:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$545",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1769:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$545",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:31:6"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "1407:103:6",
              "text": "@notice Change the address of the token contract\n @param _newTokenAddress new token address"
            },
            "functionSelector": "c9cda91f",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 817,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "1579:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1579:9:6"
              }
            ],
            "name": "changeTokenAddress",
            "nameLocation": "1525:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "_newTokenAddress",
                  "nameLocation": "1552:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "1544:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:26:6"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:6"
            },
            "scope": 917,
            "src": "1516:292:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "2028:113:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 850,
                          "name": "bookPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "2047:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2059:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2047:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e657720626f6f6b20707269636520697320696e76616c696420283c3d203029",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
                          "typeString": "literal_string \"New book price is invalid (<= 0)\""
                        },
                        "value": "New book price is invalid (<= 0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
                          "typeString": "literal_string \"New book price is invalid (<= 0)\""
                        }
                      ],
                      "id": 849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2039:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:58:6"
                },
                {
                  "expression": {
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 856,
                      "name": "bookPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "2108:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 857,
                      "name": "_newBookPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "2120:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2108:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "2108:25:6"
                }
              ]
            },
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "1816:139:6",
              "text": "@notice Change the book price\n @param _newBookPrice new price of the book\n @dev only used if digits of the token change"
            },
            "functionSelector": "17d832b7",
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 846,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2018:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2018:9:6"
              }
            ],
            "name": "changeBookPrice",
            "nameLocation": "1970:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_newBookPrice",
                  "nameLocation": "1994:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1986:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:23:6"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:6"
            },
            "scope": 917,
            "src": "1961:180:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "2318:52:6",
              "statements": [
                {
                  "expression": {
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 869,
                      "name": "maxRootedBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "2329:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 870,
                      "name": "_newMaxRootedBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "2345:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:33:6"
                }
              ]
            },
            "documentation": {
              "id": 862,
              "nodeType": "StructuredDocumentation",
              "src": "2149:88:6",
              "text": "@notice Change the limit of rooted books\n @param _newMaxRootedBook new limit"
            },
            "functionSelector": "dece9c7d",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 866,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2308:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2308:9:6"
              }
            ],
            "name": "changeMaxRootedBook",
            "nameLocation": "2252:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "_newMaxRootedBook",
                  "nameLocation": "2280:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2272:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:27:6"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:0:6"
            },
            "scope": 917,
            "src": "2243:127:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "2574:56:6",
              "statements": [
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 882,
                      "name": "contractEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "2585:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 883,
                      "name": "_newContractEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "2603:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2585:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:37:6"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "2378:91:6",
              "text": "@notice Change contract enabling\n @param _newContractEnabled new enabling value"
            },
            "functionSelector": "8bbb4b4d",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 879,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2559:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2559:9:6"
              }
            ],
            "name": "changeContractEnabled",
            "nameLocation": "2484:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_newContractEnabled",
                  "nameLocation": "2511:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2506:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2505:26:6"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2574:0:6"
            },
            "scope": 917,
            "src": "2475:155:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "2736:165:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 891,
                          "name": "contractEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "2769:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2788:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2769:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206973206e6f7420656e61626c65642c20636865636b2069662069742068617665206265656e206d696772617465642e",
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_949834789b08d5a08b269ff58d907d5f1c83653b28867cee5a81cacee5d91d65",
                          "typeString": "literal_string \"This contract is not enabled, check if it have been migrated.\""
                        },
                        "value": "This contract is not enabled, check if it have been migrated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_949834789b08d5a08b269ff58d907d5f1c83653b28867cee5a81cacee5d91d65",
                          "typeString": "literal_string \"This contract is not enabled, check if it have been migrated.\""
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2747:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:134:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:134:6"
                },
                {
                  "id": 897,
                  "nodeType": "PlaceholderStatement",
                  "src": "2892:1:6"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "2638:65:6",
              "text": "@notice Modifier to disable functions if contract is disabled"
            },
            "id": 899,
            "name": "ContractEnabled",
            "nameLocation": "2718:15:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:2:6"
            },
            "src": "2709:192:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "3033:54:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 910,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3059:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3059:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "3071:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 907,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "3044:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "3044:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3044:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:35:6"
                }
              ]
            },
            "documentation": {
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "2909:64:6",
              "text": "@notice Transfer funds from contract address to owner wallet"
            },
            "functionSelector": "2e1a7d4d",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 904,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "3023:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3023:9:6"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2988:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3005:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "2997:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:17:6"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:6"
            },
            "scope": 917,
            "src": "2979:108:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "836:2254:6",
        "usedErrors": []
      }
    ],
    "src": "638:2454:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Management.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "Event": [
        781
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "Management": [
        917
      ],
      "Ownable": [
        1015
      ]
    },
    "id": 918,
    "license": "Apache License 2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 783,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "638:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 784,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 546,
        "src": "665:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 785,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 1016,
        "src": "722:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 786,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 918,
        "sourceUnit": 782,
        "src": "747:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 788,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1015,
              "src": "859:7:6"
            },
            "id": 789,
            "nodeType": "InheritanceSpecifier",
            "src": "859:7:6"
          },
          {
            "baseName": {
              "id": 790,
              "name": "Event",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 781,
              "src": "868:5:6"
            },
            "id": 791,
            "nodeType": "InheritanceSpecifier",
            "src": "868:5:6"
          }
        ],
        "canonicalName": "Management",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 787,
          "nodeType": "StructuredDocumentation",
          "src": "772:64:6",
          "text": "@title Contract with all functions need to manage contract"
        },
        "fullyImplemented": true,
        "id": 917,
        "linearizedBaseContracts": [
          917,
          781,
          1015
        ],
        "name": "Management",
        "nameLocation": "845:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 792,
              "nodeType": "StructuredDocumentation",
              "src": "881:107:6",
              "text": "@notice Bool to block or not contract\n @dev only used to disable old contract after a migration"
            },
            "functionSelector": "41b3a0d9",
            "id": 795,
            "mutability": "mutable",
            "name": "contractEnabled",
            "nameLocation": "1006:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "994:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 793,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "994:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1024:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "1037:27:6",
              "text": "@notice Price of a book"
            },
            "functionSelector": "6e9164f4",
            "id": 801,
            "mutability": "mutable",
            "name": "bookPrice",
            "nameLocation": "1085:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1070:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 797,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1070:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 800,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 798,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1097:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3230",
                "id": 799,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1101:2:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_20_by_1",
                  "typeString": "int_const 20"
                },
                "value": "20"
              },
              "src": "1097:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 802,
              "nodeType": "StructuredDocumentation",
              "src": "1112:59:6",
              "text": "@notice Maximum number of rooted books (see whitepaper)"
            },
            "functionSelector": "40e548c8",
            "id": 805,
            "mutability": "mutable",
            "name": "maxRootedBook",
            "nameLocation": "1192:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1177:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 803,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1177:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 804,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1208:2:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "1219:67:6",
              "text": "@notice Address of the token used to buy books (see whitepaper)"
            },
            "functionSelector": "9d76ea58",
            "id": 808,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "1307:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1292:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 807,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1292:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "1328:46:6",
              "text": "@notice Token variable to call his methods"
            },
            "functionSelector": "fc0c546a",
            "id": 812,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1393:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 917,
            "src": "1380:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$545",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 811,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 810,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 545,
                "src": "1380:5:6"
              },
              "referencedDeclaration": 545,
              "src": "1380:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$545",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "1589:219:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 821,
                          "name": "_newTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "1622:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1650:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1642:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 822,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1642:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1642:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1622:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e657720746f6b656e2773206164647265737320697320696e76616c696420283d203029",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1667:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
                          "typeString": "literal_string \"New token's address is invalid (= 0)\""
                        },
                        "value": "New token's address is invalid (= 0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eed13efc68c0f38c0b8c78030e23c99af95ff6967f3625afda15674a07463b7a",
                          "typeString": "literal_string \"New token's address is invalid (= 0)\""
                        }
                      ],
                      "id": 820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1600:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:116:6"
                },
                {
                  "expression": {
                    "id": 832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 830,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "1727:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 831,
                      "name": "_newTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "1742:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1727:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 833,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:31:6"
                },
                {
                  "expression": {
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 834,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 812,
                      "src": "1769:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$545",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 836,
                          "name": "_newTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "1783:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 835,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "1777:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1777:23:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$545",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1769:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$545",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:31:6"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "1407:103:6",
              "text": "@notice Change the address of the token contract\n @param _newTokenAddress new token address"
            },
            "functionSelector": "c9cda91f",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 817,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "1579:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1579:9:6"
              }
            ],
            "name": "changeTokenAddress",
            "nameLocation": "1525:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "_newTokenAddress",
                  "nameLocation": "1552:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "1544:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:26:6"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:0:6"
            },
            "scope": 917,
            "src": "1516:292:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "2028:113:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 850,
                          "name": "bookPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "2047:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2059:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2047:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e657720626f6f6b20707269636520697320696e76616c696420283c3d203029",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
                          "typeString": "literal_string \"New book price is invalid (<= 0)\""
                        },
                        "value": "New book price is invalid (<= 0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f932a74f1121561032fbec5484dfd884f266ca608b0319dd6b91225b5c6c7696",
                          "typeString": "literal_string \"New book price is invalid (<= 0)\""
                        }
                      ],
                      "id": 849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2039:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:58:6"
                },
                {
                  "expression": {
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 856,
                      "name": "bookPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "2108:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 857,
                      "name": "_newBookPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "2120:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2108:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "2108:25:6"
                }
              ]
            },
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "1816:139:6",
              "text": "@notice Change the book price\n @param _newBookPrice new price of the book\n @dev only used if digits of the token change"
            },
            "functionSelector": "17d832b7",
            "id": 861,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 846,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2018:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2018:9:6"
              }
            ],
            "name": "changeBookPrice",
            "nameLocation": "1970:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_newBookPrice",
                  "nameLocation": "1994:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1986:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:23:6"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:0:6"
            },
            "scope": 917,
            "src": "1961:180:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "2318:52:6",
              "statements": [
                {
                  "expression": {
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 869,
                      "name": "maxRootedBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "2329:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 870,
                      "name": "_newMaxRootedBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 864,
                      "src": "2345:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:33:6"
                }
              ]
            },
            "documentation": {
              "id": 862,
              "nodeType": "StructuredDocumentation",
              "src": "2149:88:6",
              "text": "@notice Change the limit of rooted books\n @param _newMaxRootedBook new limit"
            },
            "functionSelector": "dece9c7d",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 867,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 866,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2308:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2308:9:6"
              }
            ],
            "name": "changeMaxRootedBook",
            "nameLocation": "2252:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "_newMaxRootedBook",
                  "nameLocation": "2280:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "2272:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:27:6"
            },
            "returnParameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:0:6"
            },
            "scope": 917,
            "src": "2243:127:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "2574:56:6",
              "statements": [
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 882,
                      "name": "contractEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "2585:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 883,
                      "name": "_newContractEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "2603:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2585:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:37:6"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "2378:91:6",
              "text": "@notice Change contract enabling\n @param _newContractEnabled new enabling value"
            },
            "functionSelector": "8bbb4b4d",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 879,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "2559:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2559:9:6"
              }
            ],
            "name": "changeContractEnabled",
            "nameLocation": "2484:21:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_newContractEnabled",
                  "nameLocation": "2511:19:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "2506:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2505:26:6"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2574:0:6"
            },
            "scope": 917,
            "src": "2475:155:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "2736:165:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 891,
                          "name": "contractEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "2769:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2788:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2769:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206973206e6f7420656e61626c65642c20636865636b2069662069742068617665206265656e206d696772617465642e",
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:63:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_949834789b08d5a08b269ff58d907d5f1c83653b28867cee5a81cacee5d91d65",
                          "typeString": "literal_string \"This contract is not enabled, check if it have been migrated.\""
                        },
                        "value": "This contract is not enabled, check if it have been migrated."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_949834789b08d5a08b269ff58d907d5f1c83653b28867cee5a81cacee5d91d65",
                          "typeString": "literal_string \"This contract is not enabled, check if it have been migrated.\""
                        }
                      ],
                      "id": 890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2747:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:134:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "2747:134:6"
                },
                {
                  "id": 897,
                  "nodeType": "PlaceholderStatement",
                  "src": "2892:1:6"
                }
              ]
            },
            "documentation": {
              "id": 888,
              "nodeType": "StructuredDocumentation",
              "src": "2638:65:6",
              "text": "@notice Modifier to disable functions if contract is disabled"
            },
            "id": 899,
            "name": "ContractEnabled",
            "nameLocation": "2718:15:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:2:6"
            },
            "src": "2709:192:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "3033:54:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 910,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3059:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3059:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "3071:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 907,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "3044:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "3044:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3044:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:35:6"
                }
              ]
            },
            "documentation": {
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "2909:64:6",
              "text": "@notice Transfer funds from contract address to owner wallet"
            },
            "functionSelector": "2e1a7d4d",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 905,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 904,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 986,
                  "src": "3023:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3023:9:6"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2988:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3005:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "2997:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2997:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2996:17:6"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:6"
            },
            "scope": 917,
            "src": "2979:108:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 918,
        "src": "836:2254:6",
        "usedErrors": []
      }
    ],
    "src": "638:2454:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-13T16:19:16.396Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeBookPrice(uint256)": {
        "details": "only used if digits of the token change",
        "params": {
          "_newBookPrice": "new price of the book"
        }
      },
      "changeContractEnabled(bool)": {
        "params": {
          "_newContractEnabled": "new enabling value"
        }
      },
      "changeMaxRootedBook(uint256)": {
        "params": {
          "_newMaxRootedBook": "new limit"
        }
      },
      "changeTokenAddress(address)": {
        "params": {
          "_newTokenAddress": "new token address"
        }
      },
      "transferOwnership(address)": {
        "params": {
          "newOwner": "address of the new owner of the contract"
        }
      }
    },
    "stateVariables": {
      "contractEnabled": {
        "details": "only used to disable old contract after a migration"
      }
    },
    "title": "Contract with all functions need to manage contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "OwnershipTransferred(address,address)": {
        "notice": "Event emited when ownership is transferred"
      },
      "newBook(uint256,uint256,uint256,uint256,address)": {
        "notice": "Event emitted during a book creation"
      },
      "profit(uint256,address)": {
        "notice": "Event emitted when profit is added to user's wallet"
      },
      "updatedBook(uint256,uint256,uint256,uint256,address)": {
        "notice": "Event emitted when a book is updated (update of child/profit)"
      }
    },
    "kind": "user",
    "methods": {
      "bookPrice()": {
        "notice": "Price of a book"
      },
      "changeBookPrice(uint256)": {
        "notice": "Change the book price"
      },
      "changeContractEnabled(bool)": {
        "notice": "Change contract enabling"
      },
      "changeMaxRootedBook(uint256)": {
        "notice": "Change the limit of rooted books"
      },
      "changeTokenAddress(address)": {
        "notice": "Change the address of the token contract"
      },
      "contractEnabled()": {
        "notice": "Bool to block or not contract"
      },
      "maxRootedBook()": {
        "notice": "Maximum number of rooted books (see whitepaper)"
      },
      "owner()": {
        "notice": "address of the owner of the contract"
      },
      "token()": {
        "notice": "Token variable to call his methods"
      },
      "tokenAddress()": {
        "notice": "Address of the token used to buy books (see whitepaper)"
      },
      "transferOwnership(address)": {
        "notice": "Allows the current owner to transfer ownership of the contract to a new owner"
      },
      "withdraw(uint256)": {
        "notice": "Transfer funds from contract address to owner wallet"
      }
    },
    "version": 1
  }
}